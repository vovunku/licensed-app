import { SliceOffsetOutOfBoundsError } from '../../errors/data.js';
import { isHex } from './isHex.js';
import { size } from './size.js';
export function slice(value, start, end) {
    if (isHex(value))
        return sliceHex(value, start, end);
    return sliceBytes(value, start, end);
}
function assertStartOffset(value, start) {
    if (typeof start === 'number' && start > 0 && start > size(value) - 1)
        throw new SliceOffsetOutOfBoundsError({ offset: start, size: size(value) });
}
export function sliceBytes(value, start, end) {
    assertStartOffset(value, start);
    return value.slice(start, end);
}
export function sliceHex(value_, start, end) {
    assertStartOffset(value_, start);
    const value = value_
        .replace('0x', '')
        .slice((start ?? 0) * 2, (end ?? value_.length) * 2);
    return `0x${value}`;
}
//# sourceMappingURL=slice.js.map