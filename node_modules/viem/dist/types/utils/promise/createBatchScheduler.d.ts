type Resolved<TReturnType extends readonly unknown[] = any> = [
    result: TReturnType[number],
    results: TReturnType
];
export declare function createBatchScheduler<TParameters, TReturnType extends readonly unknown[]>({ fn, id, shouldSplitBatch, wait, }: {
    fn: (args: TParameters[]) => Promise<TReturnType>;
    id: number | string;
    shouldSplitBatch?: (args: TParameters[]) => boolean;
    wait?: number;
}): {
    flush: () => boolean;
    schedule(args: TParameters): Promise<Resolved<TReturnType>>;
};
export {};
//# sourceMappingURL=createBatchScheduler.d.ts.map