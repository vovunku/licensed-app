import { RequestParams, SismoConnectClientConfig } from './types';
import { SismoConnectResponse } from './common-types';
import { GroupParams } from './sdk';
export declare const SismoConnect: (config: SismoConnectClientConfig) => SismoConnectClient;
export declare class SismoConnectClient {
    private _appId;
    private _vaultAppBaseUrl;
    private _devConfig;
    private _devModeEnabled;
    private _sdk;
    constructor({ appId, devMode, vaultAppBaseUrl, sismoApiUrl, }: SismoConnectClientConfig);
    request: ({ claims, claim, auths, auth, signature, namespace, callbackPath, callbackUrl }: RequestParams) => void;
    getRequestLink: ({ claims, claim, auths, auth, signature, namespace, callbackPath, callbackUrl }: RequestParams) => string;
    getResponse: () => SismoConnectResponse | null;
    getGroup({ id, name, timestamp }: GroupParams): Promise<import("./sdk").GetGroupQueryOutput & {
        data: import("./sdk").FetchedData;
    }>;
    getResponseBytes: () => string | null;
}
